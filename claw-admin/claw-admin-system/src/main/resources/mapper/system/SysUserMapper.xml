<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SysUserMapper">

    <resultMap type="SysUser" id="SysUserResult">
        <id     property="id"       	column="id"      />
        <result property="deptId"       column="dept_id"      />
        <result property="userName"     column="user_name"    />
        <result property="nickname"     column="nickname"    />
        <result property="email"        column="email"        />
        <result property="mobile"  		column="mobile"  />
        <result property="gender"       column="gender"          />
        <result property="avatarId"     column="avatar_id"       />
        <result property="password"     column="password"     />
        <result property="status"       column="status"       />
        <result property="delFlag"      column="del_flag"     />
        <result property="loginIp"      column="login_ip"     />
        <result property="loginDate"    column="login_date"   />
        <result property="createdBy"    column="created_by"    />
        <result property="createdAt"   	column="created_at"  />
        <result property="updatedBy"    column="updated_by"    />
        <result property="updatedAt"   	column="updated_at"  />
        <result property="remark"       column="remark"       />
        <association property="dept"    javaType="SysDept"         resultMap="deptResult" />
        <collection  property="roles"   javaType="java.util.List"  resultMap="RoleResult" />
    </resultMap>

    <resultMap id="deptResult" type="SysDept">
        <id     property="deptId"    column="dept_id"     />
        <result property="parentId"  column="parent_id"   />
        <result property="deptName"  column="dept_name"   />
        <result property="ancestors" column="ancestors"   />
        <result property="orderNum"  column="order_num"   />
        <result property="leader"    column="leader"      />
        <result property="status"    column="dept_status" />
    </resultMap>

    <resultMap id="RoleResult" type="SysRole">
        <id     property="roleId"       column="role_id"        />
        <result property="roleName"     column="role_name"      />
        <result property="permissionKey"      column="permission_key"       />
        <result property="roleSort"     column="role_sort"      />
        <result property="dataScope"    column="data_scope"     />
        <result property="status"       column="role_status"    />
    </resultMap>

	<sql id="selectUserVo">
        select u.id, u.dept_id, u.user_name, u.nickname, u.email, u.avatar_id, u.mobile, u.password, u.gender, u.status, u.del_flag, u.login_ip, u.login_date, u.created_by, u.created_at, u.remark,
        d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.status as dept_status,
        r.role_id, r.role_name, r.permission_key, r.role_sort, r.data_scope, r.status as role_status
        from claw_user u
		    left join claw_dept d on u.dept_id = d.dept_id
		    left join claw_user_role ur on u.id = ur.user_id
		    left join claw_role r on r.role_id = ur.role_id
    </sql>

    <select id="selectUserList" parameterType="SysUser" resultMap="SysUserResult">
		select u.id, u.dept_id, u.nickname, u.user_name, u.email, u.mobile, u.gender, u.status, u.del_flag, u.login_ip, u.login_date, u.created_by, u.created_at, u.remark, d.dept_name, d.leader from claw_user u
		left join claw_dept d on u.dept_id = d.dept_id
		where u.del_flag = '0'
		<if test="id != null and id != 0">
			AND u.id = #{id}
		</if>
		<if test="userName != null and userName != ''">
			AND u.user_name like concat('%', #{userName}, '%')
		</if>
		<if test="nickname != null and nickname != ''">
			AND u.nickname like concat('%', #{nickname}, '%')
		</if>
		<if test="status != null and status != ''">
			AND u.status = #{status}
		</if>
		<if test="mobile != null and mobile != ''">
			AND u.mobile like concat('%', #{mobile}, '%')
		</if>
		<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
			AND date_format(u.created_at,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
		</if>
		<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
			AND date_format(u.created_at,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
		</if>
		<if test="deptId != null and deptId != 0">
			AND (u.dept_id = #{deptId} OR u.dept_id IN ( SELECT t.dept_id FROM claw_dept t WHERE find_in_set(#{deptId}, ancestors) ))
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>

	<select id="selectAllocatedList" parameterType="SysUser" resultMap="SysUserResult">
	    select distinct u.id, u.dept_id, u.user_name, u.nickname, u.email, u.mobile, u.status, u.created_at
	    from claw_user u
			 left join claw_dept d on u.dept_id = d.dept_id
			 left join claw_user_role ur on u.id = ur.user_id
			 left join claw_role r on r.role_id = ur.role_id
	    where u.del_flag = '0' and r.role_id = #{roleId}
	    <if test="userName != null and userName != ''">
			AND u.user_name like concat('%', #{userName}, '%')
		</if>
		<if test="mobile != null and mobile != ''">
			AND u.mobile like concat('%', #{mobile}, '%')
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>

	<select id="selectUnallocatedList" parameterType="SysUser" resultMap="SysUserResult">
	    select distinct u.id, u.dept_id, u.user_name, u.nickname, u.email, u.mobile, u.status, u.created_at
	    from claw_user u
			 left join claw_dept d on u.dept_id = d.dept_id
			 left join claw_user_role ur on u.id = ur.user_id
			 left join claw_role r on r.role_id = ur.role_id
	    where u.del_flag = '0' and (r.role_id != #{roleId} or r.role_id IS NULL)
	    and u.id not in (select u.id from claw_user u inner join claw_user_role ur on u.id = ur.user_id and ur.role_id = #{roleId})
	    <if test="userName != null and userName != ''">
			AND u.user_name like concat('%', #{userName}, '%')
		</if>
		<if test="mobile != null and mobile != ''">
			AND u.mobile like concat('%', #{mobile}, '%')
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>

	<select id="selectUserByUserName" parameterType="String" resultMap="SysUserResult">
	    <include refid="selectUserVo"/>
		where u.user_name = #{userName} and u.del_flag = '0'
	</select>

	<select id="selectUserById" parameterType="Long" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.id = #{userId}
	</select>

	<select id="checkUserNameUnique" parameterType="String" resultMap="SysUserResult">
		select id, user_name from claw_user where user_name = #{userName} and del_flag = '0' limit 1
	</select>

	<select id="checkPhoneUnique" parameterType="String" resultMap="SysUserResult">
		select id, mobile from claw_user where mobile = #{mobile} and del_flag = '0' limit 1
	</select>

	<select id="checkEmailUnique" parameterType="String" resultMap="SysUserResult">
		select id, email from claw_user where email = #{email} and del_flag = '0' limit 1
	</select>

	<insert id="insertUser" parameterType="SysUser" useGeneratedKeys="true" keyProperty="id">
 		insert into claw_user(
 			<if test="id != null and id != 0">id,</if>
 			<if test="deptId != null and deptId != 0">dept_id,</if>
 			<if test="userName != null and userName != ''">user_name,</if>
 			<if test="nickname != null and nickname != ''">nickname,</if>
 			<if test="email != null and email != ''">email,</if>
 			<if test="avatarId != null and avatarId != ''">avatar_id,</if>
 			<if test="mobile != null and mobile != ''">mobile,</if>
 			<if test="gender != null and gender != ''">gender,</if>
 			<if test="password != null and password != ''">password,</if>
 			<if test="status != null and status != ''">status,</if>
 			<if test="createdBy != null and createdBy != ''">created_by,</if>
 			<if test="remark != null and remark != ''">remark,</if>
 			created_at
 		)values(
 			<if test="id != null and id != ''">#{id},</if>
 			<if test="deptId != null and deptId != ''">#{deptId},</if>
 			<if test="userName != null and userName != ''">#{userName},</if>
 			<if test="nickname != null and nickname != ''">#{nickname},</if>
 			<if test="email != null and email != ''">#{email},</if>
 			<if test="avatarId != null and avatarId != ''">#{avatarId},</if>
 			<if test="mobile != null and mobile != ''">#{mobile},</if>
 			<if test="gender != null and gender != ''">#{gender},</if>
 			<if test="password != null and password != ''">#{password},</if>
 			<if test="status != null and status != ''">#{status},</if>
 			<if test="createdBy != null and createdBy != ''">#{createdBy},</if>
 			<if test="remark != null and remark != ''">#{remark},</if>
 			sysdate()
 		)
	</insert>

	<update id="updateUser" parameterType="SysUser">
 		update claw_user
 		<set>
 			<if test="deptId != null and deptId != 0">dept_id = #{deptId},</if>
 			<if test="userName != null and userName != ''">user_name = #{userName},</if>
 			<if test="nickname != null and nickname != ''">nickname = #{nickname},</if>
 			<if test="email != null ">email = #{email},</if>
 			<if test="mobile != null ">mobile = #{mobile},</if>
 			<if test="gender != null and gender != ''">gender = #{gender},</if>
 			<if test="avatarId != null and avatarId != ''">avatar_id = #{avatarId},</if>
 			<if test="password != null and password != ''">password = #{password},</if>
 			<if test="status != null and status != ''">status = #{status},</if>
 			<if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
 			<if test="loginDate != null">login_date = #{loginDate},</if>
 			<if test="updatedBy != null and updatedBy != ''">updated_by = #{updatedBy},</if>
 			<if test="remark != null">remark = #{remark},</if>
 			updated_at = sysdate()
 		</set>
 		where id = #{id}
	</update>

	<update id="updateUserStatus" parameterType="SysUser">
 		update claw_user set status = #{status} where id = #{id}
	</update>

	<update id="updateUserAvatar" parameterType="SysUser">
 		update claw_user set avatar_id = #{avatarId} where user_name = #{userName}
	</update>

	<update id="resetUserPwd" parameterType="SysUser">
 		update claw_user set password = #{password} where user_name = #{userName}
	</update>

	<delete id="deleteUserById" parameterType="Long">
 		update claw_user set del_flag = '-1' where id = #{userId}
 	</delete>

 	<delete id="deleteUserByIds" parameterType="Long">
 		update claw_user set del_flag = '-1' where id in
 		<foreach collection="array" item="userId" open="(" separator="," close=")">
 			#{userId}
        </foreach> 
 	</delete>
	
</mapper> 